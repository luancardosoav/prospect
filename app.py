import streamlit as st
import requests
from datetime import datetime

st.set_page_config(page_title="Void CRM", page_icon="üìΩÔ∏è", layout="wide")
st.markdown("<h1 style='text-align: center;'>üì≤ Void - Prospec√ß√£o Inteligente</h1>", unsafe_allow_html=True)
st.write("")

# URL da API do Google Apps Script
API_URL = "https://script.google.com/macros/s/AKfycbxiXUYjHalZhwIAyZgNl4iKKvdKIl8hzb3eCG93BD810F89bUHmpcEouVhSG-k2ORvViQ/exec"

# Formul√°rio
st.subheader("‚ûï Novo Lead")

col1, col2 = st.columns(2)
with col1:
    nome = st.text_input("Nome do Lead")
    whatsapp = st.text_input("WhatsApp (apenas n√∫meros)", max_chars=15)
    instagram = st.text_input("Instagram ou site")
    observacoes = st.text_area("Observa√ß√µes")

with col2:
    nicho = st.selectbox("Nicho", [
        "Cl√≠nicas odontol√≥gicas", "Nutricionistas", "Personal trainers",
        "Lojas f√≠sicas", "Restaurantes", "Sal√µes de beleza",
        "Artes√£os", "Est√∫dios de tatuagem", "Arquitetos", "E-commerces locais"
    ])
    status = st.selectbox("Status", ["Novo", "Contatado", "Aguardando resposta", "Fechado"])
    data = datetime.now().strftime("%d/%m/%Y")

# Mensagens autom√°ticas
mensagens_padrao = {
    "Cl√≠nicas odontol√≥gicas": "Oi, tudo bem? Vi tua cl√≠nica e pensei em como v√≠deos podem aumentar a confian√ßa do paciente antes da consulta...",
    "Nutricionistas": "Oi! Vi teu conte√∫do e pensei como v√≠deos poderiam te posicionar como refer√™ncia na nutri√ß√£o...",
    "Personal trainers": "Fala! Vi teus treinos e pensei como v√≠deos certos podem atrair novos alunos e refor√ßar tua autoridade...",
    "Lojas f√≠sicas": "Oi! Vi o perfil da tua loja e imaginei v√≠deos mostrando produtos, bastidores e promo√ß√µes...",
    "Restaurantes": "Ol√°! V√≠deos mostrando pratos e a experi√™ncia do restaurante atraem novos clientes todos os dias...",
    "Sal√µes de beleza": "Oi! Mostrar transforma√ß√£o em v√≠deo atrai muito mais clientes pro teu sal√£o...",
    "Artes√£os": "Oi! Mostrar o processo de cria√ß√£o das tuas pe√ßas em v√≠deo gera conex√£o real com quem compra...",
    "Est√∫dios de tatuagem": "Fala! Mostrar o processo da tattoo, rea√ß√£o do cliente e tua arte em v√≠deo √© chave pra atrair novos clientes...",
    "Arquitetos": "Oi! Mostrar projetos antes/depois, ideias e bastidores do teu trabalho em v√≠deo atrai muito mais aten√ß√£o...",
    "E-commerces locais": "Oi! V√≠deos mostrando o uso real dos teus produtos aumentam a convers√£o e criam autoridade..."
}

msg_neutra = mensagens_padrao.get(nicho, "")
msg_informal = msg_neutra.replace("Oi", "E a√≠").replace("Ol√°", "Fala")
msg_institucional = msg_neutra.replace("Oi", "Ol√°").replace("Fala", "Ol√°")

st.markdown("### üí¨ Mensagens sugeridas")
st.code("üìå Neutro:\n" + msg_neutra)
st.code("üòé Informal:\n" + msg_informal)
st.code("üè¢ Institucional:\n" + msg_institucional)

if st.button("üíæ Salvar Lead"):
    if nome and whatsapp and nicho:
        payload = {
            "nome": nome,
            "whatsapp": whatsapp,
            "instagram": instagram,
            "nicho": nicho,
            "obs": observacoes,
            "neutra": msg_neutra,
            "informal": msg_informal,
            "inst": msg_institucional,
            "status": status,
            "data": data
        }
        try:
            r = requests.post(API_URL, json=payload)
            if r.status_code == 200:
                st.success("Lead salvo com sucesso!")
            else:
                st.error("Erro ao enviar. C√≥digo: {}".format(r.status_code))
        except Exception as e:
            st.error(f"Erro de conex√£o: {e}")
    else:
        st.warning("Preencha nome, WhatsApp e nicho.")
